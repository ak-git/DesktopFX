plugins {
    id "org.javamodularity.moduleplugin" version "1.8.7"
    id 'java'
    id 'java-library'
    id 'idea'
    id "org.sonarqube" version "3.3"
    id 'jacoco'

    id "application"
    id 'org.openjfx.javafxplugin' version '0.0.10'

    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.github.spotbugs" version "4.7.2"
}

spotbugs {
    reportLevel = 'high'
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "ak-git_DesktopFX"
        property "sonar.organization", "ak-git"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "ec97b4884454351da027c6345043fc8ae9401d53"
        property "sonar.branch.name", "master"
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
    }
}

jacoco {
    toolVersion = "0.8.7"
}

ext {
    testNG = 'org.testng:testng:7.4.0'
    jsr305 = 'com.google.code.findbugs:jsr305:3.0.2'
    javax_inject = 'javax.inject:javax.inject:1'
    uom_se = 'tec.uom:uom-se:1.0.10'
    javax_json = 'org.glassfish:javax.json:1.1.4'
    commons_math3 = 'org.apache.commons:commons-math3:3.6.1'
    commons_csv = 'org.apache.commons:commons-csv:1.8'
    jSerialComm = 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
    jenetics = 'io.jenetics:jenetics:6.2.0'
    javaVersion = JavaVersion.VERSION_16
}

wrapper {
    description 'Setup the Gradle wrapper'
    gradleVersion = "7.1.1"
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

allprojects {
    group = 'com.ak'
    version = '2021.07.16'
    apply plugin: 'idea'
    idea {
        module {
            inheritOutputDirs = true
        }
    }

    sourceSets {
        main.output.resourcesDir = main.java.outputDir
    }

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.javamodularity.moduleplugin'
    apply plugin: 'jacoco'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    dependencies {
        implementation jsr305
        implementation testNG
    }

    test {
        forkEvery = 5
        useTestNG()
        maxHeapSize = '1G'
    }
}

dependencies {
    implementation project(':FxCore')
    implementation project(':Communication')

    implementation javax_inject
    implementation uom_se
    implementation javax_json
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation commons_csv
}

javafx {
    version = '16'
    modules = ['javafx.controls', 'javafx.fxml']
}

configurations {
    all {
        exclude group: 'jakarta.annotation', module: 'jakarta.annotation-api'
        exclude group: 'aopalliance', module: 'aopalliance'
    }
}

processResources {
    filesMatching("**/keys*.properties") {
        expand(project.properties)
    }
}

mainClassName = "com.ak.fx.desktop.SpringFxApplication"