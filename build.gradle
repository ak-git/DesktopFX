import com.github.spotbugs.SpotBugsTask

plugins {
    id 'com.github.spotbugs' version '1.6.0'
}

ext.projectIds = ['java': '1.9']

task wrapper(type: Wrapper) {
    gradleVersion = "4.5.1"
}

allprojects {
    group = 'com.ak'
    version = '2017.3'
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: "com.github.spotbugs"

    spotbugs {
        toolVersion = '3.1.2'
    }

    tasks.withType(SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    sourceCompatibility = projectIds.java
    targetCompatibility = projectIds.java

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = 'Central Repository'
            url = 'http://repo.maven.apache.org/maven2'
        }
        maven {
            name = 'Apache Repository'
            url = 'https://repository.apache.org/content/repositories/snapshots/'
        }
        maven {
            name = 'Spring rich client repository'
            url = 'http://spring-rich-c.sourceforge.net/maven2repository'
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        compile group: 'javax.inject', name: 'javax.inject', version: '1'
        compile group: 'com.github.spotbugs', name: 'spotbugs', version: '3.1.2'
        testCompile group: 'org.testng', name: 'testng', version: '6.14.2'
    }

    test {
        forkEvery = 5
        maxParallelForks = Runtime.runtime.availableProcessors() / 2
    }

    test.useTestNG()
}

project(':Util') {
    dependencies {
        compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
        compile group: 'tec.uom', name: 'uom-se', version: '1.0.8'
    }
}

project(':Communication') {
    dependencies {
        compile group: 'org.scream3r', name: 'jssc', version: '2.8.0'
        compile project(':Util')
    }
}

project(':FxCore') {
    dependencies {
        compile group: 'org.springframework', name: 'spring-context', version: '5.0.4.RELEASE'
        compile project(':Util')
    }
}

project(':FxDesktop') {
    apply plugin: 'application'
    mainClassName = 'com.ak.fx.desktop.FxApplication'

    run {
        jvmArgs '-server', '-Xms512m', '-Xmx1024m'
    }

    dependencies {
        compile project(':FxCore')
        compile project(':Communication')
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            exclude '**/*.properties'
        }
        from(sourceSets.main.resources.srcDirs) {
            include '**/*.properties'
            filter { String line ->
                line.replaceAll(project.name.toString(),
                        project.name.toString() + ' ' + project.version.toString())
            }
        }
    }
}