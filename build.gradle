ext.projectIds = ['java': '1.8']

allprojects {
    group = 'com.ak'
    version = '1.1'
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'findbugs'
    findbugs.toolVersion = '3.0.1'

    sourceCompatibility = projectIds.java
    targetCompatibility = projectIds.java

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = 'Central Repository'
            url = 'http://repo.maven.apache.org/maven2'
        }
        maven {
            name = 'Apache Repository'
            url = 'https://repository.apache.org/content/repositories/snapshots/'
        }
        maven {
            name = 'Spring rich client repository'
            url = 'http://spring-rich-c.sourceforge.net/maven2repository'
        }
    }

    dependencies {
        compile group: 'javax.inject', name: 'javax.inject', version: '1'
        compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
        testCompile group: 'org.testng', name: 'testng', version: '6.9.10'
    }

    test {
        forkEvery = 5
        maxParallelForks = Runtime.runtime.availableProcessors() / 2
    }

    test.useTestNG()
}

project(':Util') {
    dependencies {
        compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
        compile group: 'tec.uom', name: 'uom-se', version: '0.9'
    }
}

project(':Communication') {
    dependencies {
        compile project(':Util')
        compile group: 'org.scream3r', name: 'jssc', version: '2.8.0'
        compile group: 'io.reactivex', name: 'rxjava', version: '1.1.6'
    }
}

project(':FxCore') {
    dependencies {
        compile group: 'org.springframework', name: 'spring-context', version: '4.3.1.RELEASE'
        compile group: 'io.reactivex', name: 'rxjava', version: '1.1.6'
        compile project(':Util')
    }
}

project(':FxDesktop') {
    apply plugin: 'application'
    mainClassName = 'com.ak.fx.desktop.FxApplication'

    run {
        jvmArgs '-server', '-Xms512m', '-Xmx1024m'
    }

    dependencies {
        compile project(':FxCore')
        compile project(':Communication')
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            exclude '**/*.properties'
        }
        from(sourceSets.main.resources.srcDirs) {
            include '**/*.properties'
            filter { String line ->
                line.replaceAll(project.name.toString(),
                        project.name.toString() + ' ' + project.version.toString())
            }
        }
    }
}