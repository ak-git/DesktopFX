plugins {
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'java-library'
    id 'idea'
}

ext.projectIds = ['java': JavaVersion.VERSION_11]

wrapper {
    description 'Setup the Gradle wrapper'
    gradleVersion = "5.5.1"
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

allprojects {
    group = 'com.ak'
    version = '2019.3'
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java-library'
    sourceCompatibility = projectIds.java
    targetCompatibility = projectIds.java

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = 'Apache Repository'
            url = 'https://repository.apache.org/content/repositories/snapshots/'
        }
        maven {
            name = 'Spring rich client repository'
            url = 'http://spring-rich-c.sourceforge.net/maven2repository'
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
        jcenter()
    }

    dependencies {
        implementation 'com.google.code.findbugs:jsr305:3.0.2'
        testImplementation 'org.testng:testng:7.0.0-beta7'
    }

    test {
        forkEvery = 5
        useTestNG()
        maxHeapSize = '1G'
    }

    test.useTestNG()
}

project(':Util') {
    ext.moduleName = 'com.ak.util'

    compileJava {
        inputs.property("moduleName", 'com.ak.util')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
                    '--patch-module', "$moduleName=" + files(sourceSets.main.resources.srcDirs).asPath
            ]
        }
    }

    dependencies {
        implementation 'tec.uom:uom-se:1.0.10'
        implementation 'org.glassfish:javax.json:1.1.4'
        implementation 'org.apache.commons:commons-math3:3.6.1'
    }
}

project(':Communication') {
    ext.moduleName = 'com.ak.comm'

    compileJava {
        inputs.property("moduleName", 'com.ak.comm')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
                    '--patch-module', "$moduleName=" + files(sourceSets.main.resources.srcDirs).asPath
            ]
        }
    }

    dependencies {
        api project(':Util')
        implementation 'javax.inject:javax.inject:1'
        implementation 'tec.uom:uom-se:1.0.9'
        implementation 'org.scream3r:jssc:2.8.0'
    }
}

project(':FxCore') {
    apply plugin: 'org.openjfx.javafxplugin'
    ext.moduleName = 'com.ak.fx'

    javafx {
        modules = ['javafx.graphics']
    }

    compileJava {
        inputs.property("moduleName", 'com.ak.fx')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
                    '--patch-module', "$moduleName=" + files(sourceSets.main.resources.srcDirs).asPath
            ]
        }
    }

    dependencies {
        api project(':Util')
        api 'org.springframework:spring-context:5.1.8.RELEASE'
    }
}

project(':FxDesktop') {
    apply plugin: 'org.openjfx.javafxplugin'
    apply plugin: 'application'
    mainClassName = 'com.ak.fx.desktop/com.ak.fx.desktop.FxApplication'

    ext.moduleName = 'com.ak.fx.desktop'

    javafx {
        modules = ['javafx.controls', 'javafx.fxml']
    }

    compileJava {
        inputs.property("moduleName", 'com.ak.fx.desktop')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
                    '--patch-module', "$moduleName=" + files(sourceSets.main.resources.srcDirs).asPath
            ]
        }
    }

    run {
        inputs.property("moduleName", 'com.ak.fx.desktop')
        doFirst {
            jvmArgs = [
                    '--module-path', classpath.asPath,
                    '--patch-module', "$moduleName=" + files(sourceSets.main.resources.srcDirs).asPath,
                    '--module', "$mainClassName"
            ]
        }
    }

    dependencies {
        implementation project(':FxCore')
        implementation project(':Communication')

        implementation 'org.springframework:spring-context:5.1.8.RELEASE'
        implementation 'javax.inject:javax.inject:1'
        implementation 'tec.uom:uom-se:1.0.10'
        implementation 'org.glassfish:javax.json:1.1.4'
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            exclude '**/*.properties'
        }
        from(sourceSets.main.resources.srcDirs) {
            include '**/*.properties'
            filter { String line ->
                line.replaceAll('application.version', project.version.toString())
            }
        }
    }
}